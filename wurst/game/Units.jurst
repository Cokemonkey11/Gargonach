
package Units
    class pauseDat
        unit u
        real timeLeft
        string overheadEffect
    end

    globals
        public constant int HEROID = 'h001'
        public constant int OBELISK = 'h002'
        public constant int GARGONACHID = 'h000'
        public constant int LOCUSTID = 'Aloc'
        public constant int SHIELDID = 'h00B'
        public constant int LAVAWELLID = 'h007'
        public constant int GENERATORID = 'h00C'
        public constant int DEFILEDFOUNTAINID = 'h00D'
        public constant string STANDARDSTUN = "Abilities\\Spells\\Human\\Thunderclap\\ThunderclapTarget.mdl"
        public unit gargonach
        public unit donRogo
        public unit sandMill
        public unit hammer
        public unit fountain
        public unit array sandKegs[4]
        public unit array lavawells[4]
        private constant real PAUSEFIDELITY = 1./30.
        private pauseDat array pauseDB
        private int pauseDBIndex = -1
        private timer pauseTime = CreateTimer()
    end

    private function timedPauseGetIndex takes unit u returns int
        int returner = -1
        int index = 0
        pauseDat tempDat
        loop
            exitwhen index > pauseDBIndex or returner != -1
            tempDat = pauseDB[index]
            if tempDat.u == u
                returner = index
            end
            index++
        end
        return returner
    end

    private function timedPauseP()
        effect fx
        pauseDat tempDat
        int index = 0
        loop
            exitwhen index > pauseDBIndex
            tempDat = pauseDB[index]
            tempDat.timeLeft = tempDat.timeLeft-PAUSEFIDELITY
            fx = AddSpecialEffectTarget(tempDat.overheadEffect, tempDat.u, "overhead")
            DestroyEffect(fx)
            if tempDat.timeLeft<=0. or GetUnitState(tempDat.u, UNIT_STATE_LIFE) < 1
                PauseUnit(tempDat.u, false)
                destroy tempDat
                pauseDB[index] = pauseDB[pauseDBIndex]
                pauseDBIndex--
                if pauseDBIndex == -1
                    PauseTimer(pauseTime)
                end
            end
            index++
        end
    end

    public function isUnitPaused takes unit u returns boolean
        return (timedPauseGetIndex(u) != -1)
    end

    public function timedPause takes unit u, real s, string way, string overheadEffect returns nothing
        int indexFromUnit = timedPauseGetIndex(u)
        pauseDat tempDat
        if way == "set"
            if indexFromUnit != -1
                tempDat = pauseDB[indexFromUnit]
                tempDat.timeLeft = s
                tempDat.overheadEffect = overheadEffect
            else
                tempDat = new pauseDat
                tempDat.u = u
                tempDat.timeLeft = s
                tempDat.overheadEffect = overheadEffect
                pauseDBIndex++
                pauseDB[pauseDBIndex] = tempDat
                if pauseDBIndex == 0
                    TimerStart(pauseTime, PAUSEFIDELITY, true, function timedPauseP)
                end
                PauseUnit(u, true)
            end
        end
    end
end
