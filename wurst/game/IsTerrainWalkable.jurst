
//Thanks to anitarf and Vexorian @ wc3c.net for this library, it makes things easier.

library IsTerrainWalkable
    globals
        // this value is how far from a point the item may end up for the point to be considered pathable
        private constant real MAX_RANGE = 10.
        // the following two variables are set to the position of the item after each pathing check
        // that way, if a point isn't pathable, these will be the coordinates of the nearest point that is
        public real X = 0.
        public real Y = 0.
        private rect r
        private item check
        private item array hidden
        private int hiddenMax = 0
    end

    init
        check = CreateItem('ciri', 0, 0)
        SetItemVisible(check, false)
        r = Rect(0.0, 0.0, 128.0, 128.0)
    end

    private function HideBothersomeItem()
        if IsItemVisible(GetEnumItem())
            hidden[hiddenMax] = GetEnumItem()
            SetItemVisible(hidden[hiddenMax], false)
            hiddenMax++
        end
    end

    function IsTerrainWalkable takes real x, real y returns boolean
        // first, hide any items in the area so they don't get in the way of our item
        MoveRectTo(r, x, y)
        EnumItemsInRect(r, null, function HideBothersomeItem)
        // try to move the check item and get it's coordinates
        SetItemPosition(check, x, y)//this unhides the item...
        X = GetItemX(check)
        Y = GetItemY(check)
        SetItemVisible(check, false)//...so we must hide it again
        // before returning, unhide any items that got hidden at the start
        loop
            exitwhen hiddenMax<=0
            hiddenMax--
            SetItemVisible(hidden[hiddenMax], true)
            hidden[hiddenMax] = null
        end
        // return pathability status
        return (x-X)*(x-X) + (y-Y)*(y-Y) < MAX_RANGE*MAX_RANGE
    end
end
