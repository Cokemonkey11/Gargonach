package Use
    import Fx
    import Game
    import GameTimer
    import Helper
    import LinkedListModule
    import TerrainMod
    import UnitsApi

    constant USEID             = 'A001'
    constant LIGHTID           = 'h003'
    constant HEALTHYFOUNTAINID = 'h00E'
    constant NUM_WISPS         =     8
    constant ACCEL             =    50.

    constant ILLUMINATIONHEIGHT    =  200.
    constant LIGHTNINGBOLTDISTANCE = 1600.
    constant LIGHTNINGRADIUS       =  200.
    constant WISP_HEIGHT_CENTER    =  140.
    constant WISP_HEAL_PER_SECOND  =   2.
    constant WISP_RADIUS           =  120.
    constant HEAL_RADIUS           =  400.

    constant ILLUMINATION   = "Abilities\\Spells\\Orc\\HealingWave\\HealingWave.wav"
    constant LIGHTNINGSOUND = "Abilities\\Spells\\Items\\WandOfNeutralization\\WandOfNeutralization.wav"

    constant PATH_WISP = "units\\nightelf\\Wisp\\Wisp.mdl"

    var illumCount = 0

    class WellWisp
        use LinkedListModule

        static constant clock = CreateTimer()

        Fx fx
        angle ang
        real offset
        real velFac
        vec3 vel

        construct()
            this.fx = new Fx(fountain.getPos3Real() + vec3(0., 0., WISP_HEIGHT_CENTER), angle(0.))
            this.ang = angle(GetRandomReal(0., 2. * bj_PI))
            this.offset = GetRandomReal(0., 2. * bj_PI)
            this.velFac = GetRandomReal(1., 3.)
            this.vel = vec3(0., 0., 0.)
            this.fx..setOwner(Player(1), true)..setFx(PATH_WISP)

            if size == 1
                clock.startPeriodic(ANIMATION_PERIOD, function tick)

        static function tick()
            let iter = iterator()
            while iter.hasNext()
                let inst = iter.next()

                var target = inst.fx.getPos2().distanceToSq(donRogo.getPos()) < 250. * 250. ? donRogo : fountain
                target.addHP(WISP_HEAL_PER_SECOND * ANIMATION_PERIOD)

                let centroid = target.getPos3Fly() + vec3(0., 0., WISP_HEIGHT_CENTER)
                let wants = centroid.polarProject(WISP_RADIUS, inst.ang, angle((getElapsedGameTime() + inst.offset) * inst.velFac))
                let pos = inst.fx.getPos3()
                inst.vel *= 0.95
                inst.vel += (wants - pos).norm() * ACCEL * ANIMATION_PERIOD
                inst.fx.setXYZ(pos + inst.vel, true)

            iter.close()


    function healingStart()
        var ctr = 0
        while ctr < NUM_WISPS

            new WellWisp()

            ctr++

    let grp = CreateGroup()
    function c()
        unit targU
        real tUX
        real tUY
        real endX
        real endY
        real ang
        unit fst
        if GetSpellAbilityId() == USEID
            targU = GetSpellTargetUnit()
            if GetUnitTypeId(targU) == OBELISK
                illumCount++
                if illumCount == OBELISK_COUNT
                    FogEnable(false)
                    FogMaskEnable(false)
                    globalSound(SECRETFOUND, 127)
                    DisplayTextToPlayer(Player(0), 0, 0, "|cff999999The |robelisks|cff999999 have enabled map vision...|r")
                    QuestSetCompleted(enableLights, true)

                tUX = GetUnitX(targU)
                tUY = GetUnitY(targU)
                CreateUnit(Player(0), LIGHTID, tUX, tUY, 270.)
                UnitAddAbility(targU, LOCUSTID)
                sound3d(ILLUMINATION, tUX, tUY, vec2(tUX, tUY).getTerrainZ() + ILLUMINATIONHEIGHT)
            else if GetUnitTypeId(targU) == GENERATORID
                tUX = GetUnitX(targU)
                tUY = GetUnitY(targU)
                ang = Atan2(tUY-GetUnitY(donRogo), tUX-GetUnitX(donRogo))
                endX = tUX + LIGHTNINGBOLTDISTANCE*Cos(ang)
                endY = tUY + LIGHTNINGBOLTDISTANCE*Sin(ang)
                tempLightning("CLPB", 1., tUX, tUY, 200., endX, endY, 50.)
                sound3d(LIGHTNINGSOUND, tUX, tUY, vec2(tUX, tUY).getTerrainZ())
                GroupEnumUnitsInRange(grp, endX, endY, LIGHTNINGRADIUS, null)
                while grp.hasNext()
                    fst = grp.next()
                    if fst == fountain
                        globalSound(SECRETFOUND, 127)
                        tUX = GetUnitX(fountain)
                        tUY = GetUnitY(fountain)
                        RemoveUnit(fountain)
                        QuestSetCompleted(enableFountain, true)
                        fountain = CreateUnit(Player(0), HEALTHYFOUNTAINID, tUX, tUY, 270.)
                        UnitAddAbility(targU, 'Aloc')
                        permModify(tUX, tUY, TYPE_GRASS, 4)
                        healingStart()

                    GroupRemoveUnit(grp, fst)

            else
                quickTTAll("I can't do that.", GetUnitX(donRogo), GetUnitY(donRogo), bj_PI/2)

    function delayedC() returns bool
        soundInitialize(ILLUMINATION)
        soundInitialize(LIGHTNINGSOUND)
        return false

    init
        trigger t = CreateTrigger()
        trigger delayed = CreateTrigger()
        TriggerRegisterPlayerUnitEvent(t, Player(0), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
        TriggerAddCondition(t, Condition(function c))
        TriggerRegisterTimerEvent(delayed, 0., false)
        TriggerAddCondition(delayed, Condition(function delayedC))
