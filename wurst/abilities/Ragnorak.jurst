package Ragnorak
    import Helper
    import Units

    constant RAGNORAKID = 'A004'
    constant HAMMERID   = 'h00A'

    constant FIDELITY         = 1./30.
    constant CHANNELTIME      =  .8
    constant FALLTIME         = CHANNELTIME + .5
    constant FADETIME         = FALLTIME + 3.
    constant FALLANGLE        = -75.*bj_DEGTORAD
    constant INITIALHEIGHT    = 1200.
    constant TARGETHEIGHT     =  600.
    constant INITIALOFFS      =  250.
    constant RADIUS           =  300.
    constant DAMAGE           =  320.
    constant MASSIVEPAUSETIME =     .9
    constant CHANNELEFFECTOFFSET = 150.

    constant CHANNELINGMODEL  = "Abilities\\Spells\\Human\\Invisibility\\InvisibilityTarget.mdl"
    constant SMASHSOUND       = "Sound\\Units\\Combat\\MetalHeavyBashWood3.wav"
    constant THUNDERCLAPSOUND = "Abilities\\Spells\\Human\\ThunderClap\\ThunderClapCaster.wav"

    bool show
    bool damaged
    group grp = CreateGroup()
    timer time = CreateTimer()
    real timeElapsed
    real angle
    real vX
    real vY
    real tX
    real tY
    unit ragHammer

    function p()
        effect fx
        unit fst
        real angle
        real uX
        real uY
        timeElapsed = timeElapsed + FIDELITY
        if timeElapsed > 0. and timeElapsed < CHANNELTIME
            if GetUnitCurrentOrder(donRogo) != OrderId("deathanddecay")
                PauseTimer(time)
                quickTTAll("Interrupted!", GetUnitX(donRogo), GetUnitY(donRogo), bj_PI/2)
            else
                angle = GetUnitFacing(donRogo) + (timeElapsed/CHANNELTIME)*(bj_PI*2)
                fx = AddSpecialEffect(CHANNELINGMODEL, GetUnitX(donRogo) + CHANNELEFFECTOFFSET*Cos(angle), GetUnitY(donRogo) + CHANNELEFFECTOFFSET*Sin(angle))
                DestroyEffect(fx)
            end
        elseif timeElapsed > CHANNELTIME and timeElapsed < FALLTIME
            if show == false
                ShowUnit(ragHammer, true)
                UnitAddAbility(ragHammer, 'Aloc')
                show = true
            end
            SetUnitX(ragHammer, GetUnitX(ragHammer) + vX)
            SetUnitY(ragHammer, GetUnitY(ragHammer) + vY)
            SetUnitFlyHeight(ragHammer, TARGETHEIGHT + (INITIALHEIGHT-TARGETHEIGHT)*((FALLTIME-CHANNELTIME)-timeElapsed), 0.)
        elseif timeElapsed > FALLTIME and timeElapsed < FADETIME
            if timeElapsed < FALLTIME + .5
                fx = AddSpecialEffect(DUSTMODEL, tX + GetRandomReal(-100., 100.), tY + GetRandomReal(-100., 100.))
                DestroyEffect(fx)
            end
            SetUnitVertexColor(ragHammer, 255, 255, 255, R2I(255.-(timeElapsed-FALLTIME)*255.))
            if damaged == false
                uX = GetUnitX(ragHammer)
                uY = GetUnitY(ragHammer)
                sound3d(SMASHSOUND, uX, uY, GetUnitFlyHeight(ragHammer))
                sound3d(THUNDERCLAPSOUND, uX, uY, GetUnitFlyHeight(ragHammer))
                GroupEnumUnitsInRange(grp, uX, uY, RADIUS, null)
                loop
                    fst = FirstOfGroup(grp)
                    exitwhen fst == null
                    if IsUnitEnemy(fst, Player(0)) and fst.isAlive()
                        UnitDamageTarget(donRogo, fst, DAMAGE, true, true, ATTACK_TYPE_MAGIC, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)

                        if fst == gargonach and gargonach.isAlive()
                            timedPause(gargonach, MASSIVEPAUSETIME, "set", STANDARDSTUN)
                        end
                    end
                    GroupRemoveUnit(grp, fst)
                end
                damaged = true
            end
        else
            RemoveUnit(ragHammer)
            PauseTimer(time)
        end
    end

    function c takes nothing returns bool
        if GetSpellAbilityId() == RAGNORAKID
            tX = GetSpellTargetX()
            tY = GetSpellTargetY()
            timeElapsed = 0.
            show = false
            damaged = false
            angle = GetRandomReal(0, 2*bj_PI)
            ragHammer = CreateUnit(Player(PLAYER_NEUTRAL_AGGRESSIVE), HAMMERID, tX + INITIALOFFS*Cos(angle), tY + INITIALOFFS*Sin(angle), angle*bj_RADTODEG)
            vX = INITIALHEIGHT*Cos(FALLANGLE)*Cos(angle + bj_PI)*FIDELITY
            vY = INITIALHEIGHT*Cos(FALLANGLE)*Sin(angle + bj_PI)*FIDELITY
            ShowUnit(ragHammer, false)
            TimerStart(time, FIDELITY, true, function p)
        end
        return false
    end

    function delayedC takes nothing returns bool
        soundInitialize(SMASHSOUND)
        soundInitialize(THUNDERCLAPSOUND)
        return false
    end

    init
        trigger t = CreateTrigger()
        trigger delayed = CreateTrigger()
        TriggerRegisterTimerEvent(delayed, 0., false)
        TriggerAddCondition(delayed, Condition(function delayedC))
        TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_EFFECT)
        TriggerAddCondition(t, Condition(function c))
    end
