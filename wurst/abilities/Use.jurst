package Use
    import Game
    import Helper
    import TerrainMod
    import Units

    constant USEID             = 'A001'
    constant LIGHTID           = 'h003'
    constant HEALTHYFOUNTAINID = 'h00E'
    constant WISPID            = 'h00F'
    constant WISPSCOUNT        =     4

    constant ILLUMINATIONHEIGHT    = 200.
    constant LIGHTNINGBOLTDISTANCE = 1600.
    constant LIGHTNINGRADIUS       = 200.
    constant OFFSET                = 64.
    constant FIDELITY              = 1./30.
    constant HEALVALUE             = 10.
    constant RADOFFS               = bj_PI/64.

    constant ILLUMINATION   = "Abilities\\Spells\\Orc\\HealingWave\\HealingWave.wav"
    constant LIGHTNINGSOUND = "Abilities\\Spells\\Items\\WandOfNeutralization\\WandOfNeutralization.wav"

    int obelisksIlluminated = 0
    group grp = CreateGroup()
    real offset = 0.
    unit array wisps
    timer time = CreateTimer()

    function p()
        int index = 0
        unit fst
        offset = offset + RADOFFS
        if offset > 2*bj_PI
            offset = offset-2*bj_PI
        end
        loop
            exitwhen index > WISPSCOUNT
            SetUnitX(wisps[index], GetUnitX(fountain) + OFFSET*(index + 1)*Cos(offset))
            SetUnitY(wisps[index], GetUnitY(fountain) + OFFSET*(index + 1)*Sin(offset))
            GroupEnumUnitsInRange(grp, GetUnitX(wisps[index]), GetUnitY(wisps[index]), OFFSET, null)
            loop
                fst = FirstOfGroup(grp)
                exitwhen fst == null
                if fst == donRogo
                    SetUnitState(donRogo, UNIT_STATE_LIFE, GetUnitState(donRogo, UNIT_STATE_LIFE) + HEALVALUE)
                end
                GroupRemoveUnit(grp, fst)
            end
            index++
        end
    end

    function healingStart()
        int index = 0
        loop
            exitwhen index > WISPSCOUNT
            wisps[index] = CreateUnit(Player(0), WISPID, GetUnitX(fountain) + OFFSET*(index + 1), GetUnitY(fountain), 270.)
            index++
        end
        TimerStart(time, FIDELITY, true, function p)
    end

    function c takes nothing returns bool
        unit targU
        real tUX
        real tUY
        real endX
        real endY
        real ang
        unit fst
        if GetSpellAbilityId() == USEID
            targU = GetSpellTargetUnit()
            if GetUnitTypeId(targU) == OBELISK
                obelisksIlluminated++
                if obelisksIlluminated == OBELISK_COUNT
                    FogEnable(false)
                    globalSound(SECRETFOUND, 127)
                    DisplayTextToPlayer(Player(0), 0, 0, "|cff999999The |robelisks|cff999999 have enabled map vision...|r")
                    QuestSetCompleted(enableLights, true)
                end
                tUX = GetUnitX(targU)
                tUY = GetUnitY(targU)
                CreateUnit(Player(0), LIGHTID, tUX, tUY, 270.)
                UnitAddAbility(targU, LOCUSTID)
                sound3d(ILLUMINATION, tUX, tUY, getZ(tUX, tUY) + ILLUMINATIONHEIGHT)
            elseif GetUnitTypeId(targU) == GENERATORID
                tUX = GetUnitX(targU)
                tUY = GetUnitY(targU)
                ang = Atan2(tUY-GetUnitY(donRogo), tUX-GetUnitX(donRogo))
                endX = tUX + LIGHTNINGBOLTDISTANCE*Cos(ang)
                endY = tUY + LIGHTNINGBOLTDISTANCE*Sin(ang)
                tempLightning("CLPB", 1., tUX, tUY, 200., endX, endY, 50.)
                sound3d(LIGHTNINGSOUND, tUX, tUY, getZ(tUX, tUY))
                GroupEnumUnitsInRange(grp, endX, endY, LIGHTNINGRADIUS, null)
                loop
                    fst = FirstOfGroup(grp)
                    exitwhen fst == null
                    if fst == fountain
                        globalSound(SECRETFOUND, 127)
                        tUX = GetUnitX(fountain)
                        tUY = GetUnitY(fountain)
                        RemoveUnit(fountain)
                        QuestSetCompleted(enableFountain, true)
                        fountain = CreateUnit(Player(0), HEALTHYFOUNTAINID, tUX, tUY, 270.)
                        UnitAddAbility(targU, 'Aloc')
                        permModify(tUX, tUY, TYPE_GRASS, 4)
                        healingStart()
                    end
                    GroupRemoveUnit(grp, fst)
                end
            else
                quickTTAll("I can't do that.", GetUnitX(donRogo), GetUnitY(donRogo), bj_PI/2)
            end
        end
        return false
    end

    function delayedC takes nothing returns bool
        soundInitialize(ILLUMINATION)
        soundInitialize(LIGHTNINGSOUND)
        return false
    end

    init
        trigger t = CreateTrigger()
        trigger delayed = CreateTrigger()
        TriggerRegisterPlayerUnitEvent(t, Player(0), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
        TriggerAddCondition(t, Condition(function c))
        TriggerRegisterTimerEvent(delayed, 0., false)
        TriggerAddCondition(delayed, Condition(function delayedC))
    end
