
package Use
    globals
        private constant int USEID = 'A001'
        private constant int LIGHTID = 'h003'
        private constant int HEALTHYFOUNTAINID = 'h00E'
        private constant int WISPSCOUNT = 4
        private constant int WISPID = 'h00F'
        private constant real ILLUMINATIONHEIGHT = 200.
        private constant real LIGHTNINGBOLTDISTANCE = 1600.
        private constant real LIGHTNINGRADIUS = 200.
        private constant real OFFSET = 64.
        private constant real FIDELITY = 1./30.
        private constant real HEALVALUE = 10.
        private constant real RADOFFS = bj_PI/64.
        private constant string ILLUMINATION = "Abilities\\Spells\\Orc\\HealingWave\\HealingWave.wav"
        private constant string LIGHTNINGSOUND = "Abilities\\Spells\\Items\\WandOfNeutralization\\WandOfNeutralization.wav"
        private int obelisksIlluminated = 0
        private group grp = CreateGroup()
        private real offset = 0.
        private unit array wisps[WISPSCOUNT]
        private timer time = CreateTimer()
    end

    private function p()
        int index = 0
        unit fst
        offset = offset + RADOFFS
        if offset > 2*bj_PI
            offset = offset-2*bj_PI
        end
        loop
            exitwhen index > WISPSCOUNT
            SetUnitX(wisps[index], GetUnitX(units_fountain) + OFFSET*(index + 1)*Cos(offset))
            SetUnitY(wisps[index], GetUnitY(units_fountain) + OFFSET*(index + 1)*Sin(offset))
            GroupEnumUnitsInRange(grp, GetUnitX(wisps[index]), GetUnitY(wisps[index]), OFFSET, null)
            loop
                fst = FirstOfGroup(grp)
                exitwhen fst == null
                if fst == units_donRogo
                    SetUnitState(units_donRogo, UNIT_STATE_LIFE, GetUnitState(units_donRogo, UNIT_STATE_LIFE) + HEALVALUE)
                end
                GroupRemoveUnit(grp, fst)
            end
            index++
        end
    end

    private function healingStart()
        int index = 0
        loop
            exitwhen index > WISPSCOUNT
            wisps[index] = CreateUnit(Player(0), WISPID, GetUnitX(units_fountain) + OFFSET*(index + 1), GetUnitY(units_fountain), 270.)
            index++
        end
        TimerStart(time, FIDELITY, true, function p)
    end

    private function c takes nothing returns boolean
        unit targU
        real tUX
        real tUY
        real endX
        real endY
        real ang
        unit fst
        if GetSpellAbilityId() == USEID
            targU = GetSpellTargetUnit()
            if GetUnitTypeId(targU) == units_OBELISK
                obelisksIlluminated++
                if obelisksIlluminated == game_OBELISK_COUNT
                    FogEnable(false)
                    helper_globalSound(helper_SECRETFOUND, 127)
                    DisplayTextToPlayer(Player(0), 0, 0, "|cff999999The |robelisks|cff999999 have enabled map vision...|r")
                    QuestSetCompleted(game_enableLights, true)
                end
                tUX = GetUnitX(targU)
                tUY = GetUnitY(targU)
                CreateUnit(Player(0), LIGHTID, tUX, tUY, 270.)
                UnitAddAbility(targU, units_LOCUSTID)
                helper_sound3d(ILLUMINATION, tUX, tUY, helper_getZ(tUX, tUY) + ILLUMINATIONHEIGHT)
            elseif GetUnitTypeId(targU) == units_GENERATORID
                tUX = GetUnitX(targU)
                tUY = GetUnitY(targU)
                ang = Atan2(tUY-GetUnitY(units_donRogo), tUX-GetUnitX(units_donRogo))
                endX = tUX + LIGHTNINGBOLTDISTANCE*Cos(ang)
                endY = tUY + LIGHTNINGBOLTDISTANCE*Sin(ang)
                helper_tempLightning("CLPB", 1., tUX, tUY, 200., endX, endY, 50.)
                helper_sound3d(LIGHTNINGSOUND, tUX, tUY, helper_getZ(tUX, tUY))
                GroupEnumUnitsInRange(grp, endX, endY, LIGHTNINGRADIUS, null)
                loop
                    fst = FirstOfGroup(grp)
                    exitwhen fst == null
                    if fst == units_fountain
                        helper_globalSound(helper_SECRETFOUND, 127)
                        tUX = GetUnitX(units_fountain)
                        tUY = GetUnitY(units_fountain)
                        RemoveUnit(units_fountain)
                        QuestSetCompleted(game_enableFountain, true)
                        units_fountain = CreateUnit(Player(0), HEALTHYFOUNTAINID, tUX, tUY, 270.)
                        UnitAddAbility(targU, 'Aloc')
                        terrain_permModify(tUX, tUY, terrain_TYPE_GRASS, 4)
                        healingStart()
                    end
                    GroupRemoveUnit(grp, fst)
                end
            else
                helper_quickTTAll("I can't do that.", GetUnitX(units_donRogo), GetUnitY(units_donRogo), bj_PI/2)
            end
            targU = null
        end
        return false
    end

    private function delayedC takes nothing returns boolean
        helper_soundInitialize(ILLUMINATION)
        helper_soundInitialize(LIGHTNINGSOUND)
        return false
    end

    init
        trigger t = CreateTrigger()
        trigger delayed = CreateTrigger()
        TriggerRegisterPlayerUnitEvent(t, Player(0), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
        TriggerAddCondition(t, Condition(function c))
        TriggerRegisterTimerEvent(delayed, 0., false)
        TriggerAddCondition(delayed, Condition(function delayedC))
        delayed = null
        t = null
    end
end
