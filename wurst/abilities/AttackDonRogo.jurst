package AttackDonRogo
    import AggroControl
    import Helper
    import Units

    class AttackDat
        unit u
        real timeLeft
    end

    constant ATTACKDONROGOID = 'A002'

    constant ATTACKANGLE      = bj_PI/4
    constant DAMAGE           =  90.
    constant MAXATTACKHEIGHT  =  75.
    constant RANGE            = 250.
    constant BOSSRANGE        = 350.
    constant FIDELITY         =    .05
    constant PAUSETIME        =    .5

    constant string DAMAGESOUND = "Sound\\Units\\Combat\\MetalHeavyBashFlesh2.wav"

    group grp = CreateGroup()
    player owner
    real centerX
    real centerY
    unit attacker
    AttackDat array attackDB
    timer time = CreateTimer()
    int dbIndex = -1

    function f takes nothing returns bool
        real facing
        real angBetween
        real difference
        real fX
        real fY
        unit filter = GetFilterUnit()
        if IsUnitEnemy(filter, owner) and filter != gargonach and GetUnitState(filter, UNIT_STATE_LIFE)>=1 and GetUnitFlyHeight(filter) < MAXATTACKHEIGHT
            facing = bj_DEGTORAD*GetUnitFacing(attacker)
            fX = GetUnitX(filter)
            fY = GetUnitY(filter)
            angBetween = Atan2(fY-centerY, fX-centerX)
            difference = facing-angBetween
            difference = normalizeAngle(difference)
            if difference < ATTACKANGLE and difference > -1*ATTACKANGLE
                UnitDamageTarget(attacker, filter, DAMAGE, true, false, ATTACK_TYPE_HERO, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
                sound3d(DAMAGESOUND, fX, fY, GetUnitFlyHeight(filter))
            end
            if GetUnitTypeId(filter) == ID_LAVA_WELL
                increaseAggro(1, 5.)
            end
        end
        return false
    end

    function p()
        AttackDat tempDat
        int index = 0
        real facing
        real fX
        real fY
        real angBetween
        real difference
        unit fst
        loop
            exitwhen index > dbIndex
            tempDat = attackDB[index]
            tempDat.timeLeft = tempDat.timeLeft-FIDELITY
            if tempDat.timeLeft<=0.
                PauseUnit(tempDat.u, false)
                owner = GetOwningPlayer(tempDat.u)
                attacker = tempDat.u
                centerX = GetUnitX(tempDat.u)
                centerY = GetUnitY(tempDat.u)
                GroupEnumUnitsInRange(grp, centerX, centerY, RANGE, Filter(function f))
                GroupEnumUnitsInRange(grp, centerX, centerY, BOSSRANGE, null)
                loop
                    fst = FirstOfGroup(grp)
                    exitwhen fst == null
                    if fst == gargonach and GetUnitState(gargonach, UNIT_STATE_LIFE)>=1
                        facing = bj_DEGTORAD*GetUnitFacing(donRogo)
                        fX = GetUnitX(gargonach)
                        fY = GetUnitY(gargonach)
                        angBetween = Atan2(fY-centerY, fX-centerX)
                        facing = normalizeAngle(facing)
                        angBetween = normalizeAngle(angBetween)
                        difference = facing-angBetween
                        if difference < ATTACKANGLE and difference > -1*ATTACKANGLE
                            UnitDamageTarget(donRogo, gargonach, DAMAGE, true, false, ATTACK_TYPE_HERO, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
                            sound3d(DAMAGESOUND, fX, fY, GetUnitFlyHeight(gargonach))
                        end
                    end
                    GroupRemoveUnit(grp, fst)
                end
                destroy tempDat
                attackDB[index] = attackDB[dbIndex]
                dbIndex--
                if dbIndex == -1
                    PauseTimer(time)
                end
            end
            index++
        end
    end

    function c takes nothing returns bool
        AttackDat tempDat
        if GetSpellAbilityId() == ATTACKDONROGOID
            tempDat = new AttackDat
            tempDat.u = GetTriggerUnit()
            tempDat.timeLeft = PAUSETIME
            PauseUnit(tempDat.u, true)
            IssueImmediateOrder(tempDat.u, "stop")
            SetUnitAnimation(tempDat.u, "attack")
            QueueUnitAnimation(tempDat.u, "stand")
            dbIndex++
            attackDB[dbIndex] = tempDat
            if dbIndex == 0
                TimerStart(time, FIDELITY, true, function p)
            end
        end
        return false
    end

    function delayedC takes nothing returns bool
        soundInitialize(DAMAGESOUND)
        return false
    end

    init
        trigger t = CreateTrigger()
        trigger delayed = CreateTrigger()
        TriggerRegisterTimerEvent(delayed, 0., false)
        TriggerAddCondition(delayed, Condition(function delayedC))
        TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_EFFECT)
        TriggerAddCondition(t, Condition(function c))
    end
