package RogoDeath
    import Helper
    import TerrainMod
    import Units

    constant PARTICLESCOUNT = 15 //Count from 0.
    constant PARTICLEID = 'h009'

    constant FIDELITY              = 1./30.
    constant LIGHTBURSTTIME        = 2.
    constant FINISHEDEXPLOSIONTIME = LIGHTBURSTTIME + 2.
    constant PARTICLESTARTHEIGHT   = 800.
    constant TARGETHEIGHT          = 75.
    constant EXPLODESPEED          = 900.*FIDELITY
    constant EXPLODESLOWDOWNRATE   = 1.-(.3/4.) + (.1/8.)
    constant RETURNSPEED           = 400.*FIDELITY
    constant REACHEDDIST           = 100.

    var ready = false
    bool array visible
    constant time = CreateTimer()
    var timeElapsed = 0.
    var steps = 0
    var opacity = 0
    unit array lightParticles
    real array particleVx
    real array particleVy
    real deadX
    real deadY
    real returnedCount

    function p()
        int index = 0
        real tempX
        real tempY
        real direction
        real dX
        real dY
        real distance
        timeElapsed = timeElapsed + FIDELITY
        if timeElapsed > 0. and timeElapsed < LIGHTBURSTTIME
            if visible[0] == false
                ShowUnit(lightParticles[0], true)
                UnitAddAbility(lightParticles[0], 'Aloc')
                visible[0] = true
                deadX = GetUnitX(donRogo)
                deadY = GetUnitY(donRogo)
                SetUnitX(lightParticles[0], deadX)
                SetUnitY(lightParticles[0], deadY)
                SetUnitFlyHeight(lightParticles[0], PARTICLESTARTHEIGHT, 0.)
            end
            SetUnitFlyHeight(lightParticles[0], PARTICLESTARTHEIGHT-(timeElapsed/LIGHTBURSTTIME)*(PARTICLESTARTHEIGHT-TARGETHEIGHT), 0.)
            SetUnitVertexColor(donRogo, 255, 255, 255, R2I(255-(timeElapsed/LIGHTBURSTTIME)*255))
        elseif timeElapsed > LIGHTBURSTTIME and timeElapsed < FINISHEDEXPLOSIONTIME
            if visible[1] == false
                loop
                    exitwhen index > PARTICLESCOUNT
                    ShowUnit(lightParticles[index], true)
                    UnitAddAbility(lightParticles[index], 'Aloc')
                    visible[index] = true
                    SetUnitX(lightParticles[index], deadX)
                    SetUnitY(lightParticles[index], deadY)
                    particleVx[index] = EXPLODESPEED*Cos(index*2*bj_PI/(PARTICLESCOUNT + 1))
                    particleVy[index] = EXPLODESPEED*Sin(index*2*bj_PI/(PARTICLESCOUNT + 1))
                    index++
                end
                AddSpecialEffect(FLASHMODEL, deadX, deadY).destr()
                returnedCount = 0
            end
            RemoveUnit(donRogo)
            index = 0
            loop
                exitwhen index > PARTICLESCOUNT
                SetUnitX(lightParticles[index], GetUnitX(lightParticles[index]) + particleVx[index])
                SetUnitY(lightParticles[index], GetUnitY(lightParticles[index]) + particleVy[index])
                particleVx[index] = particleVx[index]*EXPLODESLOWDOWNRATE
                particleVy[index] = particleVy[index]*EXPLODESLOWDOWNRATE
                index++
            end
            donRogo = CreateUnit(Player(0), HEROID, STARTX, STARTY, 270.)
            SetUnitVertexColor(donRogo, 255, 255, 255, 0)
            ShowUnit(donRogo, false)
            PauseUnit(donRogo, true)
            UnitAddAbility(donRogo, 'Aloc')
            SetUnitTimeScale(donRogo, 0.)
        elseif timeElapsed > FINISHEDEXPLOSIONTIME and ready == false
            index = 0
            loop
                exitwhen index > PARTICLESCOUNT
                if visible[index]
                    tempX = GetUnitX(lightParticles[index])
                    tempY = GetUnitY(lightParticles[index])
                    direction = Atan2(STARTY-tempY, STARTX-tempX)
                    SetUnitX(lightParticles[index], tempX + RETURNSPEED*Cos(direction))
                    SetUnitY(lightParticles[index], tempY + RETURNSPEED*Sin(direction))
                    dX = tempX-STARTX
                    dY = tempY-STARTY
                    distance = SquareRoot(dX*dX + dY*dY)
                    if distance < REACHEDDIST
                        returnedCount++
                        if returnedCount == 1
                            ShowUnit(donRogo, true)
                        end
                        ShowUnit(lightParticles[index], false)
                        visible[index] = false
                        SetUnitVertexColor(donRogo, 255, 255, 255, R2I(returnedCount*255/(PARTICLESCOUNT + 1)))
                        AddSpecialEffect(FLASHMODEL, STARTX, STARTY).destr()
                        if returnedCount > PARTICLESCOUNT
                            ready = true
                        end
                    end
                end
                index++
            end
        else
            PauseTimer(time)
            RemoveUnit(donRogo)
            donRogo = CreateUnit(Player(0), HEROID, STARTX, STARTY, 270.)
        end
    end

    function c takes nothing returns bool
        if GetTriggerUnit() == donRogo
            timeElapsed = 0.
            ready = false
            TimerStart(time, FIDELITY, true, function p)
        end
        return false
    end

    init
        int index = 0
        trigger t = CreateTrigger()
        TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_DEATH)
        TriggerAddCondition(t, Condition(function c))
        loop
            exitwhen index > PARTICLESCOUNT
            lightParticles[index] = CreateUnit(Player(0), PARTICLEID, 0., 0., 270.)
            ShowUnit(lightParticles[index], false)
            UnitAddAbility(lightParticles[index], 'Aloc')
            index++
        end
    end
